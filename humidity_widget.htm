<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Relative Humidity Calculator</title>

    <!-- Load Chart.js and Annotations Plugin -->
    <script src="https://cdn.jsdelivr.net/npm/chart.js@3.7.1"></script>
    <script src="https://cdn.jsdelivr.net/npm/chartjs-plugin-annotation@1.3.0"></script>

    <style>
        body {
            font-family: Arial, sans-serif;
            text-align: center;
            margin: 20px;
        }
        .container {
            max-width: 600px;
            margin: auto;
            padding: 20px;
            border: 1px solid #ddd;
            border-radius: 8px;
            background-color: #f9f9f9;
        }
        label {
            display: block;
            margin: 10px 0 5px;
        }
        input, select, button {
            width: 100%;
            padding: 8px;
            margin-bottom: 15px;
        }
        canvas {
            margin-top: 20px;
        }
        .info {
            font-size: 0.9em;
            color: gray;
        }
    </style>
</head>
<body>

    <div class="container">
        <h2>Relative Humidity Calculator</h2>
        <p>Convert relative humidity at one temperature to another and visualize the relationship.</p>

        <label for="rh1">Initial Relative Humidity (%):</label>
        <input type="number" id="rh1" value="50" min="0" max="100">

        <label for="t1">Initial Temperature (T1):</label>
        <input type="number" id="t1" value="70" min="-50" max="150">

        <label for="t2">Target Temperature (T2):</label>
        <input type="number" id="t2" value="90" min="-50" max="150">

        <label for="unit">Select Unit:</label>
        <select id="unit">
            <option value="F">Fahrenheit (°F)</option>
            <option value="C">Celsius (°C)</option>
        </select>

        <button onclick="updateChart()">Calculate & Plot</button>

        <h3 id="rh2Output"></h3>
        <p class="info">Note: RH decreases as temperature increases (if no moisture is added).</p>

        <canvas id="rhChart"></canvas>
    </div>

    <script>
        // Utility functions for temperature conversion
        const fahrenheitToCelsius = (f) => (f - 32) * 5 / 9;
        const celsiusToFahrenheit = (c) => (c * 9 / 5) + 32;

        // Saturation vapor pressure (Tetens formula)
        const saturationVaporPressure = (T) => 6.112 * Math.exp((17.62 * T) / (T + 243.12));

        // Calculate RH at T2
        function calculateRH(RH1, T1, T2, unit) {
            const T1_C = unit === "F" ? fahrenheitToCelsius(T1) : T1;
            const T2_C = unit === "F" ? fahrenheitToCelsius(T2) : T2;

            const e_s_T1 = saturationVaporPressure(T1_C);
            const e_s_T2 = saturationVaporPressure(T2_C);

            return Math.min(Math.max(RH1 * (e_s_T1 / e_s_T2), 0), 100);
        }

        let myChart;

        function updateChart() {
            const RH1 = parseFloat(document.getElementById("rh1").value);
            const T1 = parseFloat(document.getElementById("t1").value);
            const T2 = parseFloat(document.getElementById("t2").value);
            const unit = document.getElementById("unit").value;

            if (isNaN(RH1) || isNaN(T1) || isNaN(T2)) {
                alert("Please enter valid numbers for RH and Temperature.");
                return;
            }

            const RH2 = calculateRH(RH1, T1, T2, unit);
            document.getElementById("rh2Output").innerText = `RH at ${T2}°${unit}: ${RH2.toFixed(2)}%`;

            const ctx = document.getElementById("rhChart").getContext("2d");

            // Set temperature range dynamically
            const tempMin = unit === "F" ? 0 : -20;
            const tempMax = unit === "F" ? 100 : 50;
            const temperatures = Array.from({ length: tempMax - tempMin + 1 }, (_, i) => i + tempMin);
            const humidityValues = temperatures.map(t => calculateRH(RH1, T1, t, unit));

            if (myChart) myChart.destroy(); // Destroy old chart before creating new one

            myChart = new Chart(ctx, {
                type: "line",
                data: {
                    labels: temperatures,
                    datasets: [{
                        label: `Relative Humidity vs Temperature (${unit})`,
                        data: humidityValues,
                        borderColor: "blue",
                        borderWidth: 2,
                        fill: false
                    }]
                },
                options: {
                    responsive: true,
                    plugins: {
                        annotation: {
                            annotations: {
                                line1: {
                                    type: "line",
                                    xMin: T1,
                                    xMax: T1,
                                    borderColor: "red",
                                    borderWidth: 2,
                                    label: { content: `T1: ${T1}°${unit}`, enabled: true, position: "top" }
                                },
                                line2: {
                                    type: "line",
                                    xMin: T2,
                                    xMax: T2,
                                    borderColor: "green",
                                    borderWidth: 2,
                                    label: { content: `T2: ${T2}°${unit}`, enabled: true, position: "top" }
                                }
                            }
                        }
                    },
                    scales: {
                        x: { 
                            title: { display: true, text: `Temperature (${unit})` },
                            type: "linear",
                            ticks: { stepSize: 10 }
                        },
                        y: { 
                            min: 0, 
                            max: 100, 
                            title: { display: true, text: "Relative Humidity (%)" } 
                        }
                    }
                }
            });
        }

        document.addEventListener("DOMContentLoaded", updateChart);
    </script>

</body>
</html>
