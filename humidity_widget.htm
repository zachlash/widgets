<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Relative Humidity & Dew Point Calculator</title>

    <!-- Load Chart.js and Annotation Plugin -->
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/chartjs-plugin-annotation"></script>

    <style>
        body {
            font-family: Arial, sans-serif;
            text-align: center;
            margin: 20px;
        }
        .container {
            max-width: 600px;
            margin: auto;
            padding: 20px;
            border: 1px solid #ddd;
            border-radius: 8px;
            background-color: #f9f9f9;
        }
        .toggle-container {
            display: flex;
            justify-content: center;
            margin: 10px 0;
        }
        .toggle-label {
            cursor: pointer;
            padding: 10px 20px;
            background: #ddd;
            border-radius: 5px;
            margin: 0 5px;
            font-weight: bold;
            user-select: none;
        }
        .toggle-label.active {
            background: #007bff;
            color: white;
        }
        input {
            width: 100%;
            padding: 8px;
            text-align: center;
            margin-bottom: 15px;
        }
        button {
            width: 100%;
            padding: 10px;
            margin-top: 10px;
            background: #007bff;
            color: white;
            border: none;
            border-radius: 5px;
            cursor: pointer;
        }
        button:hover {
            background: #0056b3;
        }
        canvas {
            margin-top: 20px;
        }
    </style>
</head>
<body>

    <div class="container">
        <h2>Relative Humidity & Dew Point Calculator</h2>
        <p>Calculate RH at a different temperature and determine the dew point.</p>

        <label for="rh1">Initial Relative Humidity (%):</label>
        <input type="number" id="rh1" value="50" min="0" max="100">

        <label>Temperature Unit:</label>
        <div class="toggle-container">
            <span id="toggleC" class="toggle-label active" onclick="toggleUnit('C')">°C</span>
            <span id="toggleF" class="toggle-label" onclick="toggleUnit('F')">°F</span>
        </div>

        <label for="t1">Initial Temperature (<span id="unitLabel">°C</span>):</label>
        <input type="number" id="t1" value="21" placeholder="°C">

        <label for="t2">Target Temperature (<span id="unitLabel2">°C</span>):</label>
        <input type="number" id="t2" value="32" placeholder="°C">

        <button onclick="updateChart()">Calculate & Plot</button>

        <h3 id="rh2Output"></h3>
        <h3 id="dewPointOutput"></h3>

        <canvas id="rhChart"></canvas>
    </div>

    <script>
        let unit = "C"; // Keep all backend math in Celsius

        function fahrenheitToCelsius(f) { return (f - 32) * 5 / 9; }
        function celsiusToFahrenheit(c) { return (c * 9 / 5) + 32; }

        function toggleUnit(selectedUnit) {
            if (unit === selectedUnit) return;

            let t1Input = document.getElementById("t1");
            let t2Input = document.getElementById("t2");

            if (selectedUnit === "F") {
                t1Input.value = celsiusToFahrenheit(parseFloat(t1Input.value)).toFixed(1);
                t2Input.value = celsiusToFahrenheit(parseFloat(t2Input.value)).toFixed(1);
            } else {
                t1Input.value = fahrenheitToCelsius(parseFloat(t1Input.value)).toFixed(1);
                t2Input.value = fahrenheitToCelsius(parseFloat(t2Input.value)).toFixed(1);
            }

            unit = selectedUnit;
            document.getElementById("unitLabel").innerText = `°${unit}`;
            document.getElementById("unitLabel2").innerText = `°${unit}`;

            document.getElementById("toggleC").classList.toggle("active", unit === "C");
            document.getElementById("toggleF").classList.toggle("active", unit === "F");

            updateChart();
        }

        function saturationVaporPressure(T) {
            return 6.112 * Math.exp((17.62 * T) / (T + 243.12));
        }

        function calculateRH(RH1, T1_C, T2_C) {
            return RH1 * (saturationVaporPressure(T1_C) / saturationVaporPressure(T2_C));
        }

        function calculateDewPoint(T_C, RH) {
            let lnRH = Math.log(RH / 100);
            return (243.12 * (lnRH + (17.62 * T_C) / (T_C + 243.12))) / 
                   (17.62 - (lnRH + (17.62 * T_C) / (T_C + 243.12)));
        }

        let myChart;

        function updateChart() {
            let RH1 = parseFloat(document.getElementById("rh1").value);
            let T1 = parseFloat(document.getElementById("t1").value);
            let T2 = parseFloat(document.getElementById("t2").value);

            let T1_C = unit === "F" ? fahrenheitToCelsius(T1) : T1;
            let T2_C = unit === "F" ? fahrenheitToCelsius(T2) : T2;

            let RH2 = calculateRH(RH1, T1_C, T2_C);
            let dewPoint_C = calculateDewPoint(T1_C, RH1);
            let dewPoint_Display = unit === "F" ? celsiusToFahrenheit(dewPoint_C) : dewPoint_C;

            document.getElementById("rh2Output").innerText = `RH at ${T2.toFixed(1)}°${unit}: ${RH2.toFixed(2)}%`;
            document.getElementById("dewPointOutput").innerText = `Dew Point: ${dewPoint_Display.toFixed(1)}°${unit}`;

            let ctx = document.getElementById("rhChart").getContext("2d");

            let temperatures = unit === "F" ? 
                Array.from({ length: 131 }, (_, i) => celsiusToFahrenheit(i - 20)) : 
                Array.from({ length: 71 }, (_, i) => i - 20);

            let humidityValues = temperatures.map(t => calculateRH(RH1, T1_C, unit === "F" ? fahrenheitToCelsius(t) : t));

            if (myChart) myChart.destroy();

            myChart = new Chart(ctx, {
                type: "line",
                data: {
                    labels: temperatures,
                    datasets: [{
                        label: "Relative Humidity (%)",
                        data: humidityValues,
                        borderColor: "blue",
                        borderWidth: 2,
                        fill: false
                    }]
                },
                options: {
                    responsive: true
                }
            });
        }

        document.addEventListener("DOMContentLoaded", updateChart);
    </script>

</body>
</html>
